document.addEventListener("DOMContentLoaded", () => {
    const fileInput = document.getElementById("fileInput");
    const audioPlayer = document.getElementById("audioPlayer");
    const videoPlayer = document.getElementById("videoPlayer");
    const nowPlaying = document.getElementById("nowPlaying");
    const playlist = document.getElementById("playlist");
    const recommendations = document.getElementById("recommendations");
    const searchInput = document.getElementById("searchInput");

    // Lista de archivos disponibles
    const mediaFiles = [
        { name: "cancion1", type: "audio", src: "/static/audio/cancion1.mp3" },
        { name: "cancion2", type: "audio", src: "/static/audio/cancion2.mp3" },
        { name: "video1", type: "video", src: "/static/video/video1.mp4" }
    ];

    function playMedia(file) {
        if(file.type === "audio") {
            videoPlayer.style.display = "none";
            audioPlayer.style.display = "block";
            audioPlayer.src = file.src;
            audioPlayer.play();
        } else {
            audioPlayer.style.display = "none";
            videoPlayer.style.display = "block";
            videoPlayer.src = file.src;
            videoPlayer.play();
        }
        nowPlaying.textContent = `Reproduciendo: ${file.name}`;
        showRecommendations(file);
    }

    function showRecommendations(currentFile) {
        recommendations.innerHTML = "";
        const keywords = currentFile.name.toLowerCase().split(/[_\s-]+/);

        const suggested = mediaFiles.filter(f => {
            return f.name !== currentFile.name && keywords.some(kw => f.name.toLowerCase().includes(kw));
        });

        if(suggested.length === 0){
            const li = document.createElement("li");
            li.textContent = "No hay recomendaciones";
            recommendations.appendChild(li);
        } else {
            suggested.forEach(f => {
                const li = document.createElement("li");
                li.textContent = f.name;
                li.addEventListener("click", () => playMedia(f));
                recommendations.appendChild(li);
            });
        }
    }

    // Llenar playlist
    mediaFiles.forEach(file => {
        const li = document.createElement("li");
        li.textContent = file.name;
        li.addEventListener("click", () => playMedia(file));
        playlist.appendChild(li);
    });

    // Buscador
    searchInput.addEventListener("input", () => {
        const query = searchInput.value.toLowerCase();
        playlist.innerHTML = "";
        const filtered = mediaFiles.filter(f => f.name.toLowerCase().includes(query));
        filtered.forEach(f => {
            const li = document.createElement("li");
            li.textContent = f.name;
            li.addEventListener("click", () => playMedia(f));
            playlist.appendChild(li);
        });
    });
});
